import{u as L,a as C}from"./useMutation-lh6r0sS5.js";import{u as P,k as N}from"./index-CrhO62n3.js";import{e as D,u as $,r as l}from"./react-DR1zDSRy.js";import{F as z}from"./antd-BEURTGXr.js";const B={xs:{span:24},sm:{span:6},md:{span:6},lg:{span:6},xl:{span:6},xxl:{span:6}},I={xs:{span:24},sm:{span:18},md:{span:18},lg:{span:16},xl:{span:14},xxl:{span:12}};function k({key:u,getApiFn:i,createApiFn:F,updateApiFn:b,initialValues:c={},backAfterSuccess:m=!0}){const{t:d}=P(),M=D(),Q=$(),p=N(),[s]=z.useForm(),[q,f]=l.useState(!1),y=`${u}-list`,E=`${u}-detail`,{mode:g,id:a}=M,t=g==="create",o=g==="edit",K=t?d("common.create"):o?d("common.edit"):"",{data:n,isLoading:S}=L({queryKey:[E,a],queryFn:()=>i?i(Number(a)):null,enabled:o&&!!i&&!!a});l.useEffect(()=>{n&&s.setFieldsValue(n)},[n,s]);const x=C({mutationFn:F,onSuccess:()=>{p.invalidateQueries({queryKey:[y]}),m&&r()},onError:e=>{console.log("error",e)}}),v=C({mutationFn:e=>b(Number(a),e),onSuccess:()=>{p.invalidateQueries({queryKey:[y]}),m&&r()},onError:e=>{console.log("error",e)}}),h=async()=>{try{f(!0);const e=await s.validateFields();t?await x.mutateAsync(e):o&&a&&await v.mutateAsync(e)}catch(e){console.log("Form validation failed:",e)}finally{f(!1)}},r=()=>{Q(-1)},w=l.useMemo(()=>({form:s,layout:"horizontal",initialValues:t?c:void 0,labelCol:B,wrapperCol:I,autoComplete:"off"}),[s,t,c]);return{id:a,title:K,isCreateMode:t,isEditMode:o,form:s,formProps:w,detailData:n,isLoading:x.isPending||v.isPending||S||q,handleSubmit:h,handleBack:r}}export{B as a,I as f,k as u};
